Arguments count: 7
Argument      0: ./monarch_run.py
Argument      1: 5
Argument      2: 6
Argument      3: 10
Argument      4: 8
Argument      5: 3
Argument      6: test_exp
----------------------------------------
5 households, 10 dependent tasks, 5 fully flexible tasks, 0 semi-flexible tasks, 0 fixed tasks, 6 penalty weight. 
----------------------------------------
0. The community is created. 
0. Aggregator is created. 
1. Best step size 0.992, 93 iterations, cost 1029764.92, using minizinc_fw
2. Best step size 0.244, 16 iterations, cost 1028651.36, using minizinc_fw
3. Best step size 0.111, 9 iterations, cost 1027985.07, using minizinc_fw
4. Best step size 0.01, 1 iterations, cost 1027961.07, using minizinc_fw
5. Best step size 0, 0 iterations, cost 1027961.07, using minizinc_fw
Converged in 5
Data are written and graphs are painted. 
0. The community is read. 
0. Aggregator is read. 
1. Best step size 0.635, 68 iterations, cost 549341.83, using ogsa_fw
2. Best step size 0.025, 1 iterations, cost 549332.4, using ogsa_fw
3. Best step size 0, 0 iterations, cost 549332.4, using ogsa_fw
Converged in 3
Data are written and graphs are painted. 
----------------------------------------
----------------------------------------
Experiment is finished. 
{0: {'no_households': 5, 'penalty_weight': 6, 'no_dependent_tasks': 10, 'no_fully_flexible_tasks_min': 5, 'no_semi_flexible_tasks_min': 0, 'no_fixed_tasks_min': 0, 'algorithm': 'minizinc_fw', 'id': 3, 'init_PAR': 5.84, 'PAR': 4.77, 'init_max_demand': 8850.0, 'max_demand': 7228.5, 'total_demand': 72753.0, 'demand_reduction': 0.18, 'cost_reduction': 0.17, 'pricing_time': 0.00615, 'rescheduling_time': 2.6683333333333334}, 1: {'no_households': 5, 'penalty_weight': 6, 'no_dependent_tasks': 10, 'no_fully_flexible_tasks_min': 5, 'no_semi_flexible_tasks_min': 0, 'no_fixed_tasks_min': 0, 'algorithm': 'ogsa_fw', 'id': 3, 'init_PAR': 8.81, 'PAR': 4.53, 'init_max_demand': 7200.0, 'max_demand': 3703.33, 'total_demand': 39238.0, 'demand_reduction': 0.49, 'cost_reduction': 0.23, 'pricing_time': 0.0047, 'rescheduling_time': 0.0032000000000000006}}
