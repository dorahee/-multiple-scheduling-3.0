Arguments count: 1
Argument      0: run-monarch.py
----------------------------------------
10 households, 1 dependent tasks, 10 fully flexible tasks, 0 semi-flexible tasks, 0 fixed tasks, 1 penalty weight. 
----------------------------------------
0. The community is read. 
0. Aggregator is read. 
Household 0, [67, 70, 67, 0, 72, 120, 74, 5, 0, 67]. 
Household 5, [110, 67, 136, 95, 28, 3, 119, 67, 123, 7]. 
Household 9, [24, 89, 67, 95, 67, 75, 70, 12, 38, 82]. 
Household 3, [106, 110, 69, 15, 82, 67, 96, 129, 67, 35]. 
Household 7, [108, 6, 67, 126, 95, 114, 69, 12, 82, 111]. 
Household 6, [67, 118, 34, 67, 113, 78, 27, 67, 82, 109]. 
Household 4, [67, 67, 82, 67, 67, 72, 85, 37, 94, 67]. 
Household 1, [38, 92, 36, 88, 137, 29, 33, 52, 67, 37]. 
Household 2, [127, 112, 34, 35, 38, 35, 134, 74, 40, 74]. 
Household 8, [110, 38, 122, 111, 67, 0, 86, 73, 82, 0]. 
1. Best step size 0, 0 iterations, cost 5329833.3, using minizinc_fw
Converged in 1
Data are written and graphs are painted. 
----------------------------------------
----------------------------------------
----------------------------------------
Experiment is finished. 
    PAR    algorithm cost_reduction  ... pricing_time rescheduling_time total_demand
0  3.44  minizinc_fw              0  ...       0.0064              4.61       342364

[1 rows x 17 columns]
